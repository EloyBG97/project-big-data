version: '3'

services:
  web:
    container_name: spark-web
    build: ./flask
    ports:
      - "5000:5000"
    volumes:
      - ./flask:/code
    depends_on:
      - kafka
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1 # Mostrar los prints bien
      - kafkaRoute=kafka:9093
  spark:
    container_name: spark-streaming
    build: ./spark
    volumes:
      - ./spark:/code
      - ./datos-abiertos/data/:/code/data
    depends_on:
      - kafka
    environment:
      - dataRoute=../datos-abiertos/data/
      - kafkaRoute=localhost:9092
    network_mode: host

  datos-abiertos:
    container_name: datos-abiertos
    build: ./datos-abiertos
    volumes:
      - ./datos-abiertos:/code
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
     - "9092:9092"
    expose:
     - "9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic_test:1:1"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock